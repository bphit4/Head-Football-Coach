# Generated by Django 2.2.5 on 2019-12-15 23:06

import HeadFootballCoach.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('AuditID', models.AutoField(primary_key=True, serialize=False)),
                ('TimeElapsed', models.DecimalField(decimal_places=8, default=0, max_digits=13)),
                ('AuditTime', models.DateTimeField(auto_now=True, null=True)),
                ('AuditDescription', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('AuditVersion', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('DateID', models.AutoField(primary_key=True, serialize=False)),
                ('Date', models.DateField()),
                ('IsCurrent', models.BooleanField(default=False)),
                ('BroadcastSelected', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('CityID', models.AutoField(primary_key=True, serialize=False)),
                ('CityName', models.CharField(default='City Name', max_length=40)),
                ('Population', models.IntegerField(default=0)),
                ('YouthEngagement', models.IntegerField(default=0)),
                ('Latitude', models.DecimalField(decimal_places=5, default=0, max_digits=15)),
                ('Longitude', models.DecimalField(decimal_places=5, default=0, max_digits=15)),
                ('Occurance', models.IntegerField(blank=True, null=True)),
                ('RandomStart', models.IntegerField(blank=True, null=True)),
                ('RandomStop', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('CoachID', models.AutoField(primary_key=True, serialize=False)),
                ('CoachFirstName', models.CharField(max_length=20)),
                ('CoachLastName', models.CharField(max_length=20)),
                ('CoachAge', models.CharField(max_length=20)),
                ('ReputationRating', models.PositiveSmallIntegerField(default=0)),
                ('CharismaRating', models.PositiveSmallIntegerField(default=0)),
                ('ScoutingRating', models.PositiveSmallIntegerField(default=0)),
                ('GameplanRating', models.PositiveSmallIntegerField(default=0)),
                ('InGameAdjustmentRating', models.PositiveSmallIntegerField(default=0)),
                ('TeachShooting', models.PositiveSmallIntegerField(default=0)),
                ('TeachSkills', models.PositiveSmallIntegerField(default=0)),
                ('PatienceTendency', models.PositiveSmallIntegerField(default=0)),
                ('VeteranTendency', models.PositiveSmallIntegerField(default=0)),
                ('ValueSkillsTendency', models.PositiveSmallIntegerField(default=0)),
                ('ValueAthleticismTendency', models.PositiveSmallIntegerField(default=0)),
                ('ValueSizeTendency', models.PositiveSmallIntegerField(default=0)),
                ('OnsideKickTendency', models.PositiveSmallIntegerField(default=5)),
                ('PlaycallPassTendency', models.PositiveSmallIntegerField(default=55)),
                ('OffensivePlaybook', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('DefensivePlaybook', models.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('ConferenceID', models.AutoField(primary_key=True, serialize=False)),
                ('ConferenceName', models.CharField(default='', max_length=40)),
                ('ConferenceAbbreviation', models.CharField(default='', max_length=10)),
                ('ConferencePrestige', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('GameID', models.AutoField(primary_key=True, serialize=False)),
                ('GameTime', models.CharField(max_length=5)),
                ('WasPlayed', models.BooleanField(default=False)),
                ('NationalBroadcast', models.BooleanField(default=False)),
                ('RegionalBroadcast', models.BooleanField(default=False)),
                ('GameDateID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Calendar')),
            ],
        ),
        migrations.CreateModel(
            name='GameStructure',
            fields=[
                ('GameStructureID', models.AutoField(primary_key=True, serialize=False)),
                ('GameStructureName', models.CharField(default='Standard Pro', max_length=16)),
                ('PeriodCount', models.PositiveSmallIntegerField(default=4)),
                ('PeriodLength', models.PositiveSmallIntegerField(default=12)),
                ('OvertimeSettingValue', models.PositiveSmallIntegerField(blank=True, default=5, null=True)),
                ('OvertimeType', models.CharField(choices=[('1', 'Additional Period'), ('2', 'First To X'), ('3', 'Win by X')], default='1', max_length=19)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('LeagueID', models.AutoField(primary_key=True, serialize=False)),
                ('LeagueName', models.CharField(default='New League', max_length=50)),
                ('LeagueAbbreviation', models.CharField(default='NL', max_length=10)),
                ('LeaguePrestige', models.PositiveSmallIntegerField(default=50, validators=[HeadFootballCoach.models.HundredRange])),
                ('NumberOfPlayoffTeams', models.PositiveSmallIntegerField(default=64)),
                ('HomeFieldAdvantage', models.DecimalField(decimal_places=5, default=1.02, max_digits=8)),
                ('PlayTimeTalentFactor', models.DecimalField(decimal_places=5, default=5.0, max_digits=8)),
                ('ConferenceList', models.CharField(default='', max_length=400)),
                ('LeagueLogoURL', models.CharField(default='', max_length=200)),
                ('LeagueType', models.CharField(choices=[('1', 'Pro'), ('2', 'International'), ('3', 'College'), ('4', 'High School'), ('5', 'International Playoff'), ('6', 'Amateur Playoff')], default='1', max_length=19)),
                ('GameStructureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.GameStructure')),
            ],
        ),
        migrations.CreateModel(
            name='LeagueSeason',
            fields=[
                ('LeagueSeasonID', models.AutoField(primary_key=True, serialize=False)),
                ('SeasonStartYear', models.PositiveSmallIntegerField(default=0)),
                ('SeasonEndYear', models.PositiveSmallIntegerField(default=9999)),
                ('IsCurrent', models.BooleanField(default=False)),
                ('ScheduleCreated', models.BooleanField(default=False)),
                ('PlayersCreated', models.BooleanField(default=False)),
                ('CoachesCreated', models.BooleanField(default=False)),
                ('TeamSeasonsCreated', models.BooleanField(default=False)),
                ('PlayoffCreated', models.BooleanField(default=False)),
                ('AwardsCreated', models.BooleanField(default=False)),
                ('OffseasonStarted', models.BooleanField(default=False)),
                ('CoachCarouselExecuted', models.BooleanField(default=False)),
                ('RecruitingSigningDayExecuted', models.BooleanField(default=False)),
                ('PlayerDepartureDayExecuted', models.BooleanField(default=False)),
                ('NextSeasonCutoverDayExecuted', models.BooleanField(default=False)),
                ('IncomingPlayerArrivalDayExecuted', models.BooleanField(default=False)),
                ('RankingsLastCalculated', models.DateField(blank=True, default=None, null=True)),
                ('CoachCarouselDateID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CoachCarouselDateID', to='HeadFootballCoach.Calendar')),
                ('IncomingPlayerArrivalDayDateID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='IncomingPlayerArrivalDayDateID', to='HeadFootballCoach.Calendar')),
                ('LeagueID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.League')),
                ('NextSeasonCutoverDayDateID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='NextSeasonCutoverDayDateID', to='HeadFootballCoach.Calendar')),
                ('PlayerDepartureDayDateID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PlayerDepartureDayDateID', to='HeadFootballCoach.Calendar')),
                ('RecruitingSigningDayDateID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='RecruitingSigningDayDateID', to='HeadFootballCoach.Calendar')),
                ('RegularSeasonEndDateID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='RegularSeasonEndDateID', to='HeadFootballCoach.Calendar')),
                ('RegularSeasonStartDateID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='RegularSeasonStartDateID', to='HeadFootballCoach.Calendar')),
            ],
        ),
        migrations.CreateModel(
            name='NameList',
            fields=[
                ('NameID', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(default='N', max_length=30)),
                ('IsFirstName', models.BooleanField(default=False)),
                ('IsLastName', models.BooleanField(default=False)),
                ('RandomStart', models.IntegerField(blank=True, null=True)),
                ('RandomStop', models.IntegerField(blank=True, null=True)),
                ('Occurance', models.PositiveSmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Nation',
            fields=[
                ('NationID', models.AutoField(primary_key=True, serialize=False)),
                ('NationName', models.CharField(default='Nation Name', max_length=30)),
                ('NationAbbreviation', models.CharField(default='NN', max_length=4)),
                ('YouthEngagement', models.IntegerField(default=0)),
                ('PercentWhite', models.PositiveSmallIntegerField(default=20, validators=[HeadFootballCoach.models.HundredRange])),
                ('PercentBlack', models.PositiveSmallIntegerField(default=20, validators=[HeadFootballCoach.models.HundredRange])),
                ('PercentAsian', models.PositiveSmallIntegerField(default=20, validators=[HeadFootballCoach.models.HundredRange])),
                ('PercentIndian', models.PositiveSmallIntegerField(default=20, validators=[HeadFootballCoach.models.HundredRange])),
                ('PercentLatin', models.PositiveSmallIntegerField(default=20, validators=[HeadFootballCoach.models.HundredRange])),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('PlayerID', models.AutoField(primary_key=True, serialize=False)),
                ('PlayerFirstName', models.CharField(max_length=50)),
                ('PlayerLastName', models.CharField(max_length=50)),
                ('Class', models.CharField(max_length=20)),
                ('IsCurrentlyRedshirted', models.BooleanField(default=False)),
                ('WasPreviouslyRedshirted', models.BooleanField(default=False)),
                ('JerseyNumber', models.PositiveSmallIntegerField(default=1)),
                ('Height', models.PositiveSmallIntegerField(default=60)),
                ('Weight', models.PositiveSmallIntegerField(default=185)),
                ('Position', models.CharField(default='PG', max_length=2)),
                ('PlayerFaceJson', models.CharField(default='', max_length=2000)),
                ('IsRecruit', models.BooleanField(default=False)),
                ('RecruitingStars', models.PositiveSmallIntegerField(default=0)),
                ('RecruitSigned', models.BooleanField(default=False)),
                ('Recruiting_NationalRank', models.PositiveSmallIntegerField(default=0)),
                ('Recruiting_NationalPositionalRank', models.PositiveSmallIntegerField(default=0)),
                ('Recruiting_StateRank', models.PositiveSmallIntegerField(default=0)),
                ('Personality_LeadershipRating', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('Personality_ClutchRating', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('Personality_FriendlyRating', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('Personality_WorkEthicRating', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('Personality_ExpressiveRating', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('Personality_DesireForWinnerRating', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('Personality_LoyaltyRating', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('Personality_DesireForPlayingTimeRating', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('RecruitingSpeed', models.PositiveSmallIntegerField(default=100)),
                ('DevelopmentRating', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('DevelopmentGroupID', models.PositiveSmallIntegerField(default=0)),
                ('DevelopmentDayOfMonth', models.PositiveSmallIntegerField(default=1)),
                ('ChampionshipContenderValue', models.PositiveSmallIntegerField(default=10)),
                ('TeamPrestigeValue', models.PositiveSmallIntegerField(default=10)),
                ('CloseToHomeValue', models.PositiveSmallIntegerField(default=10)),
                ('PlayingTimeValue', models.PositiveSmallIntegerField(default=10)),
                ('CoachStabilityValue', models.PositiveSmallIntegerField(default=10)),
                ('CoachStyleValue', models.PositiveSmallIntegerField(default=10)),
                ('FacilitiesValue', models.PositiveSmallIntegerField(default=10)),
                ('ProPotentialValue', models.PositiveSmallIntegerField(default=10)),
                ('CampusLifestyleValue', models.PositiveSmallIntegerField(default=10)),
                ('AcademicPrestigeValue', models.PositiveSmallIntegerField(default=10)),
                ('TelevisionExposureValue', models.PositiveSmallIntegerField(default=10)),
                ('CityID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.City')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerTeamSeason',
            fields=[
                ('PlayerTeamSeasonID', models.AutoField(primary_key=True, serialize=False)),
                ('PlayerClass', models.CharField(default='', max_length=20)),
                ('GamesPlayed', models.PositiveSmallIntegerField(default=0)),
                ('GamesStarted', models.PositiveSmallIntegerField(default=0)),
                ('GameScore', models.DecimalField(decimal_places=8, default=0, max_digits=13)),
                ('PAS_Completions', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Attempts', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_INT', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Sacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_SackYards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_Carries', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Receptions', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Targets', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Fumbles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Lost', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Recovered', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Tackles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_SoloTackles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Sacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_TacklesForLoss', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Deflections', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_QBHits', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INT', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INTYards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INTTD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_Returns', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PR_Returns', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PR_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_FGA', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_FGM', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_XPA', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_XPM', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Punts', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Touchbacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Within20', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PlayerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Playoff',
            fields=[
                ('PlayoffID', models.AutoField(primary_key=True, serialize=False)),
                ('PlayoffStarted', models.BooleanField(default=False)),
                ('PlayoffCompleted', models.BooleanField(default=False)),
                ('IsPostseason', models.BooleanField(default=False)),
                ('TeamsInPlayoff', models.PositiveSmallIntegerField(default=0)),
                ('RoundsInPlayoff', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PlayoffRegion',
            fields=[
                ('PlayoffRegionID', models.AutoField(primary_key=True, serialize=False)),
                ('PlayoffRegionName', models.CharField(max_length=50)),
                ('IsFinalFour', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('RegionID', models.AutoField(primary_key=True, serialize=False)),
                ('RegionName', models.CharField(default='Region Name', max_length=30)),
                ('RegionAbbreviation', models.CharField(default='RN', max_length=4)),
                ('YouthEngagement', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='System_PlayerArchetypeRatingModifier',
            fields=[
                ('System_PlayerArchetypeRatingModifierID', models.AutoField(primary_key=True, serialize=False)),
                ('Position', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('Archetype', models.CharField(blank=True, default=None, max_length=30, null=True)),
                ('Strength_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Agility_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Speed_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Acceleration_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Stamina_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Awareness_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Jumping_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Injury_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Toughness_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ThrowPower_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ShortThrowAccuracy_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('MediumThrowAccuracy_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('DeepThrowAccuracy_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ThrowOnRun_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ThrowUnderPressure_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('PlayAction_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Trucking_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Elusiveness_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('BallCarrierVision_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('StiffArm_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('SpinMove_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('JukeMove_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('BreakTackle_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Carrying_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Catching_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('CatchInTraffic_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ShortRouteRunning_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('MediumRouteRunning_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('DeepRouteRunning_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('SpectacularCatch_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Release_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('HitPower_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Tackle_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('PowerMoves_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('FinesseMoves_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('BlockShedding_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Pursuit_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('PlayRecognition_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ManCoverage_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ZoneCoverage_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Press_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('PassBlock_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('RunBlock_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ImpactBlock_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('KickPower_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('KickAccuracy_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('KickReturn_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='System_PlayoffRound',
            fields=[
                ('PlayoffRoundID', models.AutoField(primary_key=True, serialize=False)),
                ('PlayoffRoundNumber', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('MinGameNumber', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('MaxGameNumber', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('NumberOfGames', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('NumberOfTeams', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('IsChampionshipRound', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('TeamID', models.AutoField(primary_key=True, serialize=False)),
                ('IsUserTeam', models.BooleanField(default=False)),
                ('TeamName', models.CharField(max_length=40)),
                ('TeamNickname', models.CharField(max_length=40)),
                ('Abbreviation', models.CharField(default='', max_length=10)),
                ('TeamTalent', models.PositiveSmallIntegerField(default=0)),
                ('TeamLogoURL', models.CharField(blank=True, default=None, max_length=99, null=True)),
                ('TeamColor_Primary_HEX', models.CharField(max_length=6)),
                ('TeamColor_Secondary_HEX', models.CharField(max_length=6)),
                ('TeamJerseyStyle', models.CharField(default='jersey2', max_length=20)),
                ('TeamJerseyInvert', models.BooleanField(default=False)),
                ('TeamPrestige', models.PositiveSmallIntegerField(default=0)),
                ('FacilitiesRating', models.PositiveSmallIntegerField(default=0)),
                ('ProPotentialRating', models.PositiveSmallIntegerField(default=0)),
                ('CampusLifestyleRating', models.PositiveSmallIntegerField(default=0)),
                ('AcademicPrestigeRating', models.PositiveSmallIntegerField(default=0)),
                ('TelevisionExposureRating', models.PositiveSmallIntegerField(default=0)),
                ('CoachStabilityRating', models.PositiveSmallIntegerField(default=0)),
                ('ChampionshipContenderRating', models.PositiveSmallIntegerField(default=0)),
                ('LocationRating', models.PositiveSmallIntegerField(default=0)),
                ('CityID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.City')),
                ('ConferenceID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Conference')),
                ('LeagueID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.League')),
            ],
        ),
        migrations.CreateModel(
            name='TeamSeason',
            fields=[
                ('TeamSeasonID', models.AutoField(primary_key=True, serialize=False)),
                ('ScholarshipsToOffer', models.PositiveSmallIntegerField(default=0)),
                ('Points', models.PositiveSmallIntegerField(default=0)),
                ('PointsAllowed', models.PositiveSmallIntegerField(default=0)),
                ('Possessions', models.PositiveSmallIntegerField(default=0)),
                ('TimeOfPossession', models.PositiveSmallIntegerField(default=0)),
                ('PAS_Completions', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Attempts', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_INT', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Sacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_SackYards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_Carries', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Receptions', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Targets', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Fumbles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Lost', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Recovered', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Tackles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_SoloTackles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Sacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_TacklesForLoss', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Deflections', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_QBHits', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INT', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INTYards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INTTD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_Returns', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PR_Returns', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PR_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_FGA', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_FGM', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_XPA', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_XPM', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Punts', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Touchbacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Within20', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('Turnovers', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('ThirdDownAttempt', models.PositiveSmallIntegerField(default=0)),
                ('ThirdDownConversion', models.PositiveSmallIntegerField(default=0)),
                ('FourthDownAttempt', models.PositiveSmallIntegerField(default=0)),
                ('FourthDownConversion', models.PositiveSmallIntegerField(default=0)),
                ('FirstDowns', models.PositiveSmallIntegerField(default=0)),
                ('GamesPlayed', models.PositiveSmallIntegerField(default=0)),
                ('Wins', models.PositiveSmallIntegerField(default=0)),
                ('Losses', models.PositiveSmallIntegerField(default=0)),
                ('ConferenceWins', models.PositiveSmallIntegerField(default=0)),
                ('ConferenceLosses', models.PositiveSmallIntegerField(default=0)),
                ('ConferenceRank', models.PositiveSmallIntegerField(default=0)),
                ('ConferenceGB', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('WinStreak', models.PositiveSmallIntegerField(default=0)),
                ('PlayoffSeed', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('PlayoffRank', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('ConferenceChampion', models.BooleanField(default=False)),
                ('NationalRunnerUp', models.BooleanField(default=False)),
                ('NationalChampion', models.BooleanField(default=False)),
                ('RegionalBroadcast', models.PositiveSmallIntegerField(default=0)),
                ('NationalBroadcast', models.PositiveSmallIntegerField(default=0)),
                ('RecruitingClassRank', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('TeamOverallRating', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('LeagueSeasonID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.LeagueSeason')),
                ('PlayoffRegionID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.PlayoffRegion')),
                ('TeamID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Team')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('UserID', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='World',
            fields=[
                ('WorldID', models.AutoField(primary_key=True, serialize=False)),
                ('IsCurrentWorld', models.BooleanField(default=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('HasPlayers', models.BooleanField(default=False)),
                ('HasTeams', models.BooleanField(default=False)),
                ('HasCalendar', models.BooleanField(default=False)),
                ('HasGeography', models.BooleanField(default=False)),
                ('HasGameStructures', models.BooleanField(default=False)),
                ('AllowInterruptions', models.BooleanField(default=True)),
                ('UserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.User')),
            ],
        ),
        migrations.CreateModel(
            name='TeamSeasonDateRank',
            fields=[
                ('TeamSeasonDateRankID', models.AutoField(primary_key=True, serialize=False)),
                ('IsCurrent', models.BooleanField(default=True)),
                ('NationalRank', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('NationalRankDelta', models.SmallIntegerField(blank=True, default=None, null=True)),
                ('PollPoints', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('DateID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Calendar')),
                ('TeamSeasonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.TeamSeason')),
                ('WorldID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.AddField(
            model_name='teamseason',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.CreateModel(
            name='TeamRivalry',
            fields=[
                ('TeamRivalryID', models.AutoField(primary_key=True, serialize=False)),
                ('RivalryName', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Team1TeamID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Team1', to='HeadFootballCoach.Team')),
                ('Team2TeamID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Team2', to='HeadFootballCoach.Team')),
                ('WorldID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.CreateModel(
            name='TeamGame',
            fields=[
                ('TeamGameID', models.AutoField(primary_key=True, serialize=False)),
                ('IsHomeTeam', models.BooleanField(default=False)),
                ('IsWinningTeam', models.BooleanField(default=False)),
                ('Points', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('TeamRecord', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('PAS_Completions', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Attempts', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_INT', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Sacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_SackYards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_Carries', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Receptions', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Targets', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Fumbles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Lost', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Recovered', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Tackles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_SoloTackles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Sacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_TacklesForLoss', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Deflections', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_QBHits', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INT', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INTYards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INTTD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_Returns', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PR_Returns', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PR_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_FGA', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_FGM', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_XPA', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_XPM', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Punts', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Touchbacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Within20', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('Turnovers', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('TimeOfPossession', models.PositiveSmallIntegerField(default=0)),
                ('FirstDowns', models.PositiveSmallIntegerField(default=0)),
                ('ThirdDownAttempt', models.PositiveSmallIntegerField(default=0)),
                ('ThirdDownConversion', models.PositiveSmallIntegerField(default=0)),
                ('FourthDownAttempt', models.PositiveSmallIntegerField(default=0)),
                ('FourthDownConversion', models.PositiveSmallIntegerField(default=0)),
                ('GameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Game')),
                ('TeamSeasonDateRankID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.TeamSeasonDateRank')),
                ('TeamSeasonID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.TeamSeason')),
                ('WorldID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.CreateModel(
            name='TeamConference',
            fields=[
                ('TeamConferenceID', models.AutoField(primary_key=True, serialize=False)),
                ('ConferenceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Conference')),
                ('TeamID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Team')),
                ('WorldID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.CreateModel(
            name='System_PlayoffGame',
            fields=[
                ('PlayoffGameID', models.AutoField(primary_key=True, serialize=False)),
                ('GameNumber', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('PlayoffGameNumberInRound', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('NextPlayoffGameNumberInRound', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('NextPlayoffGameID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.System_PlayoffGame')),
                ('NextPlayoffRoundID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='NextPlayoffRoundID', to='HeadFootballCoach.System_PlayoffRound')),
                ('ThisPlayoffRoundID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ThisPlayoffRoundID', to='HeadFootballCoach.System_PlayoffRound')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('StateID', models.AutoField(primary_key=True, serialize=False)),
                ('StateName', models.CharField(default='State Name', max_length=30)),
                ('StateAbbreviation', models.CharField(default='SN', max_length=4)),
                ('YouthEngagement', models.IntegerField(default=0)),
                ('NationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Nation')),
            ],
        ),
        migrations.CreateModel(
            name='RecruitTeamSeason',
            fields=[
                ('RecruitTeamSeasonID', models.AutoField(primary_key=True, serialize=False)),
                ('Signed', models.BooleanField(default=False)),
                ('OfferMade', models.BooleanField(default=False)),
                ('InterestLevel', models.PositiveSmallIntegerField(default=0)),
                ('ScoutedOverall', models.PositiveSmallIntegerField(default=0)),
                ('MatchRating', models.PositiveSmallIntegerField(default=0)),
                ('PlayerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Player')),
                ('TeamSeasonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.TeamSeason')),
                ('WorldID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.CreateModel(
            name='PlayoffRound',
            fields=[
                ('PlayoffRoundID', models.AutoField(primary_key=True, serialize=False)),
                ('RoundStarted', models.BooleanField(default=False)),
                ('RoundCompleted', models.BooleanField(default=False)),
                ('PlayoffRoundNumber', models.PositiveSmallIntegerField(default=1)),
                ('MinGameNumber', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('MaxGameNumber', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('NumberOfGames', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('NumberOfTeams', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('WinValue', models.PositiveSmallIntegerField(default=1)),
                ('IsChampionshipRound', models.BooleanField(default=False)),
                ('IsFinalFour', models.BooleanField(default=False)),
                ('PlayoffID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Playoff')),
                ('WorldID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.AddField(
            model_name='playoffregion',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.AddField(
            model_name='playoff',
            name='ChampionTeam',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Team'),
        ),
        migrations.AddField(
            model_name='playoff',
            name='LeagueSeasonID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.LeagueSeason'),
        ),
        migrations.AddField(
            model_name='playoff',
            name='MostOutstandingPlayer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Player'),
        ),
        migrations.AddField(
            model_name='playoff',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.CreateModel(
            name='PlayerTeamSeasonAward',
            fields=[
                ('PlayerTeamSeasonAwardID', models.AutoField(primary_key=True, serialize=False)),
                ('IsTopPlayer', models.BooleanField(default=False)),
                ('IsFirstTeam', models.BooleanField(default=False)),
                ('IsSecondTeam', models.BooleanField(default=False)),
                ('IsFreshmanTeam', models.BooleanField(default=False)),
                ('IsConferenceAward', models.BooleanField(default=False)),
                ('IsNationalAward', models.BooleanField(default=False)),
                ('IsMonthAward', models.BooleanField(default=False)),
                ('IsWeekAward', models.BooleanField(default=False)),
                ('IsSeasonAward', models.BooleanField(default=False)),
                ('IsPlayoffAward', models.BooleanField(default=False)),
                ('ConferenceID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Conference')),
                ('PlayerTeamSeasonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.PlayerTeamSeason')),
                ('WorldID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.AddField(
            model_name='playerteamseason',
            name='TeamSeasonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.TeamSeason'),
        ),
        migrations.AddField(
            model_name='playerteamseason',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.CreateModel(
            name='PlayerSeasonSkill',
            fields=[
                ('PlayerSeasonSkillID', models.AutoField(primary_key=True, serialize=False)),
                ('Strength_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Agility_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Speed_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Acceleration_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Stamina_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Awareness_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Jumping_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Injury_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Toughness_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ThrowPower_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ShortThrowAccuracy_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('MediumThrowAccuracy_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('DeepThrowAccuracy_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ThrowOnRun_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ThrowUnderPressure_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('PlayAction_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Trucking_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Elusiveness_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('BallCarrierVision_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('StiffArm_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('SpinMove_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('JukeMove_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('BreakTackle_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Carrying_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Catching_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('CatchInTraffic_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ShortRouteRunning_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('MediumRouteRunning_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('DeepRouteRunning_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('SpectacularCatch_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Release_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('HitPower_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Tackle_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('PowerMoves_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('FinesseMoves_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('BlockShedding_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Pursuit_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('PlayRecognition_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ManCoverage_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ZoneCoverage_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('Press_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('PassBlock_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('RunBlock_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('ImpactBlock_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('KickPower_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('KickAccuracy_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('KickReturn_Rating', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('OverallRating', models.SmallIntegerField(blank=True, default=None, null=True)),
                ('LeagueSeasonID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.LeagueSeason')),
                ('PlayerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Player')),
                ('WorldID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerGameStat',
            fields=[
                ('PlayerGameStatID', models.AutoField(primary_key=True, serialize=False)),
                ('PAS_Completions', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Attempts', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_INT', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_Sacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PAS_SackYards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_Carries', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('RUS_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Receptions', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_Targets', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('REC_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Fumbles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Lost', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('FUM_Recovered', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Tackles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_SoloTackles', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Sacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_TacklesForLoss', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_Deflections', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_QBHits', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INT', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INTYards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('DEF_INTTD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_Returns', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KR_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PR_Returns', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PR_TD', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_FGA', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_FGM', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_XPA', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('KCK_XPM', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Punts', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Yards', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Touchbacks', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('PNT_Within20', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('GameScore', models.DecimalField(decimal_places=8, default=0, max_digits=13)),
                ('GamesStarted', models.SmallIntegerField(default=0)),
                ('PlayerTeamSeasonID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.PlayerTeamSeason')),
                ('TeamGameID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.TeamGame')),
                ('WorldID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.AddField(
            model_name='nation',
            name='RegionID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Region'),
        ),
        migrations.AddField(
            model_name='leagueseason',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.AddField(
            model_name='league',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.CreateModel(
            name='Headline',
            fields=[
                ('HeadlineID', models.AutoField(primary_key=True, serialize=False)),
                ('HeadlineType', models.CharField(max_length=40)),
                ('HeadlineImportanceValue', models.PositiveSmallIntegerField(default=0)),
                ('HeadlineText', models.CharField(default='', max_length=400)),
                ('HeadlineTextHTML', models.CharField(default='', max_length=400)),
                ('DateID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Calendar')),
                ('LeagueSeasonID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.LeagueSeason')),
                ('Player1PlayerTeamSeasonID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Player1PlayerTeamSeasonID', to='HeadFootballCoach.PlayerTeamSeason')),
                ('Player2PlayerTeamSeasonID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Player2PlayerTeamSeasonID', to='HeadFootballCoach.PlayerTeamSeason')),
                ('Team1TeamID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Team1TeamID', to='HeadFootballCoach.Team')),
                ('Team2TeamID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Team2TeamID', to='HeadFootballCoach.Team')),
                ('Team3TeamID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Team3TeamID', to='HeadFootballCoach.Team')),
                ('Team4TeamID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Team4TeamID', to='HeadFootballCoach.Team')),
                ('WorldID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.CreateModel(
            name='GameEvent',
            fields=[
                ('GameEventID', models.AutoField(primary_key=True, serialize=False)),
                ('HomePoints', models.PositiveSmallIntegerField(default=0)),
                ('AwayPoints', models.PositiveSmallIntegerField(default=0)),
                ('EventTime', models.PositiveSmallIntegerField(default=0)),
                ('EventPeriod', models.PositiveSmallIntegerField(default=0)),
                ('IsScoringPlay', models.BooleanField(default=True)),
                ('PlayType', models.CharField(blank=True, default=None, max_length=6, null=True)),
                ('PlayDescription', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('DriveDescription', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('GameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Game')),
                ('ScoringTeamID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Team')),
                ('WorldID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='LeagueSeasonID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.LeagueSeason'),
        ),
        migrations.AddField(
            model_name='game',
            name='LosingTeamID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='LosingTeamID', to='HeadFootballCoach.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='PlayoffID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Playoff'),
        ),
        migrations.AddField(
            model_name='game',
            name='WinningTeamID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WinningTeamID', to='HeadFootballCoach.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CurrentDay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Calendar')),
                ('CurrentSeason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.LeagueSeason')),
                ('CurrentTeam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Team')),
            ],
        ),
        migrations.AddField(
            model_name='conference',
            name='LeagueID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.League'),
        ),
        migrations.AddField(
            model_name='conference',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.CreateModel(
            name='CoachTeamSeason',
            fields=[
                ('CoachTeamSeasonID', models.AutoField(primary_key=True, serialize=False)),
                ('Position', models.CharField(max_length=20)),
                ('Salary', models.PositiveSmallIntegerField(default=200000)),
                ('NationalCoachOfTheYearAward', models.BooleanField(default=False)),
                ('ConferenceCoachOfTheYearAward', models.BooleanField(default=False)),
                ('JobSecurity', models.PositiveSmallIntegerField(default=100)),
                ('CoachID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.Coach')),
                ('TeamSeasonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.TeamSeason')),
                ('WorldID', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World')),
            ],
        ),
        migrations.AddField(
            model_name='coach',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
        migrations.AddField(
            model_name='city',
            name='StateID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.State'),
        ),
        migrations.AddField(
            model_name='calendar',
            name='WorldID',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='HeadFootballCoach.World'),
        ),
    ]
